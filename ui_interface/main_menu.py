# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_menu.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
import sys
import stat
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTranslator, QLocale

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(799, 596)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(0, 0, 791, 551))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.information_widget = QtWidgets.QWidget(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.information_widget.sizePolicy().hasHeightForWidth())
        self.information_widget.setSizePolicy(sizePolicy)
        self.information_widget.setObjectName("information_widget")
        self.title_label = QtWidgets.QLabel(self.information_widget)
        self.title_label.setGeometry(QtCore.QRect(60, 40, 291, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(20)
        self.title_label.setFont(font)
        self.title_label.setObjectName("title_label")
        self.information_textBrowser = QtWidgets.QTextBrowser(self.information_widget)
        self.information_textBrowser.setGeometry(QtCore.QRect(380, 20, 411, 81))
        self.information_textBrowser.setObjectName("information_textBrowser")
        self.maker_label = QtWidgets.QLabel(self.information_widget)
        self.maker_label.setGeometry(QtCore.QRect(250, 80, 81, 16))
        self.maker_label.setObjectName("maker_label")
        self.verticalLayout.addWidget(self.information_widget)
        self.workspace_frame = QtWidgets.QFrame(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.workspace_frame.sizePolicy().hasHeightForWidth())
        self.workspace_frame.setSizePolicy(sizePolicy)
        self.workspace_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.workspace_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.workspace_frame.setObjectName("workspace_frame")
        self.workspace_label = QtWidgets.QLabel(self.workspace_frame)
        self.workspace_label.setGeometry(QtCore.QRect(20, 20, 61, 16))
        self.workspace_label.setObjectName("workspace_label")
        self.workspace_textEdit = QtWidgets.QTextEdit(self.workspace_frame)
        self.workspace_textEdit.setGeometry(QtCore.QRect(90, 10, 281, 31))
        self.workspace_textEdit.setMouseTracking(True)
        self.workspace_textEdit.setAcceptDrops(True)
        self.workspace_textEdit.setAcceptRichText(True)
        self.workspace_textEdit.setObjectName("workspace_textEdit")
        self.browse_pushButton = QtWidgets.QPushButton(self.workspace_frame)
        self.browse_pushButton.setGeometry(QtCore.QRect(380, 10, 41, 31))
        self.browse_pushButton.setObjectName("browse_pushButton")
        self.subfolder_create_pushButton = QtWidgets.QPushButton(self.workspace_frame)
        self.subfolder_create_pushButton.setGeometry(QtCore.QRect(20, 60, 131, 21))
        self.subfolder_create_pushButton.setObjectName("subfolder_create_pushButton")
        self.yaml_create_pushButton = QtWidgets.QPushButton(self.workspace_frame)
        self.yaml_create_pushButton.setGeometry(QtCore.QRect(160, 60, 111, 21))
        self.yaml_create_pushButton.setObjectName("yaml_create_pushButton")
        self.ramdom_classify_pushButton = QtWidgets.QPushButton(self.workspace_frame)
        self.ramdom_classify_pushButton.setGeometry(QtCore.QRect(280, 60, 141, 21))
        self.ramdom_classify_pushButton.setObjectName("ramdom_classify_pushButton")
        self.workspace_setting_tabWidget = QtWidgets.QTabWidget(self.workspace_frame)
        self.workspace_setting_tabWidget.setGeometry(QtCore.QRect(430, 10, 331, 81))
        self.workspace_setting_tabWidget.setObjectName("workspace_setting_tabWidget")
        self.target_adding_tab = QtWidgets.QWidget()
        self.target_adding_tab.setObjectName("target_adding_tab")
        self.target_adding_textEdit = QtWidgets.QTextEdit(self.target_adding_tab)
        self.target_adding_textEdit.setGeometry(QtCore.QRect(0, 0, 321, 61))
        self.target_adding_textEdit.setObjectName("target_adding_textEdit")
        self.workspace_setting_tabWidget.addTab(self.target_adding_tab, "")
        self.ramdom_classify_tab = QtWidgets.QWidget()
        self.ramdom_classify_tab.setObjectName("ramdom_classify_tab")
        self.classify_train_label = QtWidgets.QLabel(self.ramdom_classify_tab)
        self.classify_train_label.setGeometry(QtCore.QRect(30, 20, 31, 16))
        self.classify_train_label.setObjectName("classify_train_label")
        self.classify_train_spinBox = QtWidgets.QSpinBox(self.ramdom_classify_tab)
        self.classify_train_spinBox.setGeometry(QtCore.QRect(70, 10, 41, 31))
        self.classify_train_spinBox.setProperty("value", 70)
        self.classify_train_spinBox.setObjectName("classify_train_spinBox")
        self.classify_val_label = QtWidgets.QLabel(self.ramdom_classify_tab)
        self.classify_val_label.setGeometry(QtCore.QRect(140, 20, 21, 16))
        self.classify_val_label.setObjectName("classify_val_label")
        self.classify_val_spinBox = QtWidgets.QSpinBox(self.ramdom_classify_tab)
        self.classify_val_spinBox.setGeometry(QtCore.QRect(170, 10, 41, 31))
        self.classify_val_spinBox.setProperty("value", 25)
        self.classify_val_spinBox.setObjectName("classify_val_spinBox")
        self.classify_test_label = QtWidgets.QLabel(self.ramdom_classify_tab)
        self.classify_test_label.setGeometry(QtCore.QRect(230, 20, 31, 16))
        self.classify_test_label.setObjectName("classify_test_label")
        self.classify_test_spinBox = QtWidgets.QSpinBox(self.ramdom_classify_tab)
        self.classify_test_spinBox.setGeometry(QtCore.QRect(270, 10, 41, 31))
        self.classify_test_spinBox.setProperty("value", 5)
        self.classify_test_spinBox.setObjectName("classify_test_spinBox")
        self.workspace_setting_tabWidget.addTab(self.ramdom_classify_tab, "")
        self.verticalLayout.addWidget(self.workspace_frame)
        self.convert_frame = QtWidgets.QFrame(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.convert_frame.sizePolicy().hasHeightForWidth())
        self.convert_frame.setSizePolicy(sizePolicy)
        self.convert_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.convert_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.convert_frame.setObjectName("convert_frame")
        self.xml_to_txt_label = QtWidgets.QLabel(self.convert_frame)
        self.xml_to_txt_label.setGeometry(QtCore.QRect(20, 20, 71, 16))
        self.xml_to_txt_label.setObjectName("xml_to_txt_label")
        self.xml_convert_examine_label = QtWidgets.QLabel(self.convert_frame)
        self.xml_convert_examine_label.setGeometry(QtCore.QRect(30, 60, 61, 20))
        self.xml_convert_examine_label.setObjectName("xml_convert_examine_label")
        self.xml_to_txt_pushButton = QtWidgets.QPushButton(self.convert_frame)
        self.xml_to_txt_pushButton.setGeometry(QtCore.QRect(170, 20, 131, 21))
        self.xml_to_txt_pushButton.setObjectName("xml_to_txt_pushButton")
        self.xml_convert_examine_pushButton = QtWidgets.QPushButton(self.convert_frame)
        self.xml_convert_examine_pushButton.setGeometry(QtCore.QRect(170, 60, 131, 21))
        self.xml_convert_examine_pushButton.setObjectName("xml_convert_examine_pushButton")
        self.rolabelimg_pushButton = QtWidgets.QPushButton(self.convert_frame)
        self.rolabelimg_pushButton.setGeometry(QtCore.QRect(530, 20, 181, 61))
        self.rolabelimg_pushButton.setObjectName("rolabelimg_pushButton")
        self.rolabelimg_label = QtWidgets.QLabel(self.convert_frame)
        self.rolabelimg_label.setGeometry(QtCore.QRect(430, 40, 81, 16))
        self.rolabelimg_label.setObjectName("rolabelimg_label")
        self.verticalLayout.addWidget(self.convert_frame)
        self.progress_frame = QtWidgets.QFrame(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.progress_frame.sizePolicy().hasHeightForWidth())
        self.progress_frame.setSizePolicy(sizePolicy)
        self.progress_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.progress_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.progress_frame.setObjectName("progress_frame")
        self.progress_label = QtWidgets.QLabel(self.progress_frame)
        self.progress_label.setGeometry(QtCore.QRect(40, 70, 54, 12))
        self.progress_label.setObjectName("progress_label")
        self.progressBar = QtWidgets.QProgressBar(self.progress_frame)
        self.progressBar.setGeometry(QtCore.QRect(110, 60, 611, 31))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.task_onrunning_label = QtWidgets.QLabel(self.progress_frame)
        self.task_onrunning_label.setGeometry(QtCore.QRect(20, 20, 91, 21))
        self.task_onrunning_label.setObjectName("task_onrunning_label")
        self.task_onrunning_textBrowser = QtWidgets.QTextBrowser(self.progress_frame)
        self.task_onrunning_textBrowser.setGeometry(QtCore.QRect(110, 20, 581, 31))
        self.task_onrunning_textBrowser.setObjectName("task_onrunning_textBrowser")
        self.verticalLayout.addWidget(self.progress_frame)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.yolo_train_frame = QtWidgets.QFrame(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.yolo_train_frame.sizePolicy().hasHeightForWidth())
        self.yolo_train_frame.setSizePolicy(sizePolicy)
        self.yolo_train_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.yolo_train_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.yolo_train_frame.setObjectName("yolo_train_frame")
        self.yolo_train_start_pushButton = QtWidgets.QPushButton(self.yolo_train_frame)
        self.yolo_train_start_pushButton.setGeometry(QtCore.QRect(20, 60, 341, 31))
        self.yolo_train_start_pushButton.setObjectName("yolo_train_start_pushButton")
        self.yolo_train_basic_setting_pushButton = QtWidgets.QPushButton(self.yolo_train_frame)
        self.yolo_train_basic_setting_pushButton.setGeometry(QtCore.QRect(20, 20, 151, 21))
        self.yolo_train_basic_setting_pushButton.setObjectName("yolo_train_basic_setting_pushButton")
        self.yolo_train_command_setting_pushButton = QtWidgets.QPushButton(self.yolo_train_frame)
        self.yolo_train_command_setting_pushButton.setGeometry(QtCore.QRect(190, 20, 171, 21))
        self.yolo_train_command_setting_pushButton.setObjectName("yolo_train_command_setting_pushButton")
        self.horizontalLayout.addWidget(self.yolo_train_frame)
        self.yolo_test_frame = QtWidgets.QFrame(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.yolo_test_frame.sizePolicy().hasHeightForWidth())
        self.yolo_test_frame.setSizePolicy(sizePolicy)
        self.yolo_test_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.yolo_test_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.yolo_test_frame.setObjectName("yolo_test_frame")
        self.yolo_test_start_pushButton = QtWidgets.QPushButton(self.yolo_test_frame)
        self.yolo_test_start_pushButton.setGeometry(QtCore.QRect(30, 60, 341, 31))
        self.yolo_test_start_pushButton.setObjectName("yolo_test_start_pushButton")
        self.horizontalLayout.addWidget(self.yolo_test_frame)
        self.verticalLayout.addLayout(self.horizontalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 799, 22))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionEnglish = QtWidgets.QAction(MainWindow)
        self.actionEnglish.setObjectName("actionEnglish")
        self.actionChinese = QtWidgets.QAction(MainWindow)
        self.actionChinese.setObjectName("actionChinese")
        self.menu.addAction(self.actionEnglish)
        self.menu.addAction(self.actionChinese)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        self.workspace_setting_tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "yolo快速训练集成工具"))
        self.title_label.setText(_translate("MainWindow", "yolo快速训练集成工具"))
        self.maker_label.setText(_translate("MainWindow", "——by:rinst"))
        self.workspace_label.setText(_translate("MainWindow", "设定工作区"))
        self.browse_pushButton.setText(_translate("MainWindow", "浏览"))
        self.subfolder_create_pushButton.setText(_translate("MainWindow", "创建工作区下子文件夹"))
        self.yaml_create_pushButton.setText(_translate("MainWindow", "创建A.yaml文件"))
        self.ramdom_classify_pushButton.setText(_translate("MainWindow", "将图片进行随机分类"))
        self.workspace_setting_tabWidget.setTabText(self.workspace_setting_tabWidget.indexOf(self.target_adding_tab), _translate("MainWindow", "添加标注名(每行一个)"))
        self.classify_train_label.setText(_translate("MainWindow", "train"))
        self.classify_val_label.setText(_translate("MainWindow", "val"))
        self.classify_test_label.setText(_translate("MainWindow", "test"))
        self.workspace_setting_tabWidget.setTabText(self.workspace_setting_tabWidget.indexOf(self.ramdom_classify_tab), _translate("MainWindow", "设置图片分配比"))
        self.xml_to_txt_label.setText(_translate("MainWindow", "xml转txt文件"))
        self.xml_convert_examine_label.setText(_translate("MainWindow", "转换检验"))
        self.xml_to_txt_pushButton.setText(_translate("MainWindow", "xml to txt"))
        self.xml_convert_examine_pushButton.setText(_translate("MainWindow", "xml convert examine"))
        self.rolabelimg_pushButton.setText(_translate("MainWindow", "rolabelimg"))
        self.rolabelimg_label.setText(_translate("MainWindow", "启动标注工具："))
        self.progress_label.setText(_translate("MainWindow", "进展"))
        self.task_onrunning_label.setText(_translate("MainWindow", "当前处理任务："))
        self.yolo_train_start_pushButton.setText(_translate("MainWindow", "启动yolo训练(优先采用训练命令高级设置)"))
        self.yolo_train_basic_setting_pushButton.setText(_translate("MainWindow", "yolo训练基本设置"))
        self.yolo_train_command_setting_pushButton.setText(_translate("MainWindow", "yolo训练命令高级设置"))
        self.yolo_test_start_pushButton.setText(_translate("MainWindow", "启动yolo训练成果检验"))
        self.menu.setTitle(_translate("MainWindow", "language"))
        self.actionEnglish.setText(_translate("MainWindow", "English"))
        self.actionChinese.setText(_translate("MainWindow", "中文"))


class MainWindow(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        
        # 连接语言切换动作
        self.actionEnglish.triggered.connect(self.switch_to_english)
        self.actionChinese.triggered.connect(self.switch_to_chinese)
        
        # 初始化翻译器
        self.translator = QTranslator()
        
        # 根据系统语言自动加载翻译
        self.load_translation()
    
    def check_file_permissions(self, file_path):
        """检查文件权限"""
        if not os.path.exists(file_path):
            print(f"文件不存在: {file_path}")
            return False
        
        # 检查读取权限
        if not os.access(file_path, os.R_OK):
            print(f"文件没有读取权限: {file_path}")
            
            # 尝试获取当前权限
            try:
                current_permissions = stat.S_IMODE(os.lstat(file_path).st_mode)
                print(f"当前文件权限: {oct(current_permissions)}")
                
                # 尝试添加读取权限
                os.chmod(file_path, current_permissions | stat.S_IREAD)
                print(f"已添加读取权限: {file_path}")
            except Exception as e:
                print(f"无法添加读取权限: {e}")
                return False
        
        return True
    
    def load_translation(self, lang=None):
        """加载翻译文件"""
        # 移除现有的翻译器
        QtWidgets.QApplication.removeTranslator(self.translator)
        
        # 确定要加载的语言
        if lang is None:
            # 获取系统语言
            system_lang = QLocale.system().name()
            if system_lang.startswith('zh'):
                lang = 'zh_CN'
            else:
                lang = 'en'
        
        # 构建翻译文件路径
        base_dir = os.path.dirname(os.path.abspath(__file__))
        translations_dir = os.path.join(base_dir, 'translations')
        qm_file = os.path.join(translations_dir, f'{lang}.qm')
        
        print(f"基础目录: {base_dir}")
        print(f"翻译目录: {translations_dir}")
        print(f"尝试加载翻译文件: {qm_file}")
        
        # 确保翻译目录存在
        if not os.path.exists(translations_dir):
            print(f"翻译目录不存在: {translations_dir}")
            try:
                os.makedirs(translations_dir, exist_ok=True)
                print(f"已创建翻译目录: {translations_dir}")
            except Exception as e:
                print(f"创建翻译目录失败: {e}")
                return False
        
        # 检查文件权限
        if not self.check_file_permissions(qm_file):
            # 尝试从源代码目录查找 .ts 文件
            ts_file_path = os.path.join(base_dir, f"{lang}.ts")
            print(f"尝试查找 .ts 文件: {ts_file_path}")
            
            if os.path.exists(ts_file_path):
                print(f"找到 .ts 文件: {ts_file_path}")
                # 检查是否有编译工具
                try:
                    # 尝试使用 lrelease 编译 .ts 文件
                    import subprocess
                    result = subprocess.run(['lrelease', ts_file_path, '-qm', qm_file], 
                                          capture_output=True, text=True)
                    
                    if result.returncode == 0:
                        print(f"成功编译 .ts 文件到: {qm_file}")
                        # 重新检查权限
                        if self.check_file_permissions(qm_file):
                            pass
                        else:
                            return False
                    else:
                        print(f"编译失败: {result.stderr}")
                        return False
                except Exception as e:
                    print(f"无法编译 .ts 文件: {e}")
                    return False
            else:
                print(f".ts 文件也不存在: {ts_file_path}")
                return False
        
        # 加载翻译文件
        if os.path.exists(qm_file) and self.translator.load(qm_file):
            QtWidgets.QApplication.installTranslator(self.translator)
            print(f"已加载 {lang} 翻译文件")
        else:
            print(f"无法加载 {lang} 翻译文件")
            return False
        
        # 重新翻译界面
        self.retranslateUi(self)
        return True
    
    def switch_to_english(self):
        """切换到英文"""
        self.load_translation('en')
    
    def switch_to_chinese(self):
        """切换到中文"""
        self.load_translation('zh_CN')


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    
    # 创建主窗口
    window = MainWindow()
    window.show()
    
    sys.exit(app.exec_())